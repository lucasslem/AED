#include <stdio.h>
#include <stdlib.h>
#include <string.h>

void *pBuffer = NULL;

void menu();
void escolha();
void incluir();
void apagar();
void buscar();
void listar();

int main() {
    pBuffer = malloc(sizeof(int));
    (*(int *) pBuffer) = 0;

    for(;;) {
        menu();
        escolha();
    }

    return 0;
}

void menu() {
    printf("\n- 1) Incluir");
    printf("\n- 2) Apagar");
    printf("\n- 3) Buscar");
    printf("\n- 4) Listar");
    printf("\n- 5) Sair\n");
}

void escolha() {
    int opcao;

    printf("\nFuncionalidade desejada: ");
    scanf("%d", &opcao);

    switch(opcao) {
            case 1:
                incluir();
                break;
            case 2:
                apagar();
                break;
            case 3: 
                buscar();
                break;
            case 4:
                listar();
                break;
            case 5:
                printf("\nPrograma encerrado.\n");
                free(pBuffer);
                exit(0);
            default:
                printf("Opcao invalida");
                break;
        }
}

void incluir() {
    // o numero 25 aparece pelos parametros: nome[10], idade[3], telefone [12]
    pBuffer = (void *) realloc(pBuffer, sizeof(int) + sizeof(char) * 25 * (*(int *) pBuffer + 1));

    printf("\nNome: ");
    scanf("%s", (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * (*(int *) pBuffer));

    printf("Idade: ");
    scanf("%s", (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * (*(int *) pBuffer) + sizeof(char) * 10);

    printf("Telefone: ");
    scanf("%s", (char *) pBuffer + sizeof(int) + ((sizeof(char) * 25) * (*(int *) pBuffer)) + sizeof(char) * 13);

    (*(int *) pBuffer)++;
    printf("Nome adicionado.\n");
}

void apagar() {
    char excluir[10], *tempBuffer = NULL;
    int i = 0, encontrado = 0, posicao = 0;

    printf("Qual contato deseja apagar? ");
    scanf("%s", excluir);

    do {
        if(strcmp((char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i, excluir) == 0) {
            posicao = i;
            encontrado++;
        }
        i++;
    } while(i < *(int *)pBuffer);

    if(encontrado != 0) {
        tempBuffer = (void *) malloc(sizeof(int) + sizeof(char) * 25 * (posicao + 1));
    }

    for(i = 0; i < posicao; i++) {
        strcpy((char *) tempBuffer + sizeof(int) + sizeof(char) * 25 * i, (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i);
        strcpy((char *) tempBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 13, (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 10);
        strcpy((char *) tempBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 13, (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 13);
    }

    for(i = posicao + 1; i < *(int *)pBuffer; i++) {

        tempBuffer = (void *) realloc(tempBuffer, sizeof(int) + sizeof(char) * 25 * (i - 1));

        strcpy((char *) tempBuffer + sizeof(int) + sizeof(char) * 25 * (i - 1), (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i);
        strcpy((char *) tempBuffer + sizeof(int) + sizeof(char) * 25 * (i - 1) + sizeof(char) * 13, (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 10);
        strcpy((char *) tempBuffer + sizeof(int) + sizeof(char) * 25 * (i - 1) + sizeof(char) * 13, (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 13);

        (*(int *) tempBuffer)++;
    }

    (*(int *) pBuffer)--;

    for(i = 0; i < *(int*) tempBuffer; i++) {
        strcpy((char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i, (char *) tempBuffer + sizeof(int) + sizeof(char) * 25 * i);
        strcpy((char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 13, (char *) tempBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 10);
        strcpy((char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 13, (char *) tempBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 13);
    }

    free(tempBuffer);
}

void buscar() {
    char encontrar[10];
    int i = 0, encontrado = 0;

    printf("\nQual contato deseja encontrar? ");
    scanf("%s", encontrar);

    do {
        if(strcmp((char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i, encontrar) == 0) {
            printf("\n-------------------------");
            printf("\n   Contato encontrado!\n");
            printf("-------------------------\n");
            printf("\n| Nome: %s\n", (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i);
            printf("| Idade: %s\n", (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 10);
            printf("| Telefone: %s\n", (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 13);
            encontrado++;
        }
        i++;
    } while(i < *(int *)pBuffer);

    if(encontrado == 0) {
        printf("Contato inexistente.\n");
    }
}

void listar() {
    printf("\n-------------------------");
    printf("\n         AGENDA\n");
    printf("-------------------------\n");
    for(int i = 0; i < *(int *) pBuffer; i++) {
        printf("\n| Nome: %s\n", (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i);
        printf("| Idade: %s\n", (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 10);
        printf("| Telefone: %s\n", (char *) pBuffer + sizeof(int) + sizeof(char) * 25 * i + sizeof(char) * 13);
    }
}
